# Generated by Django 5.1.7 on 2025-05-28 21:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TipoPlano',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField()),
                ('preco', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duracao_dias', models.IntegerField()),
                ('intervalo_atualizacao_treino_dieta', models.IntegerField(default=60, help_text='Intervalo em dias para atualização de treino e dieta')),
                ('limite_trocas_exercicios', models.IntegerField(default=1, help_text='Número de trocas de exercícios permitidas')),
                ('limite_trocas_refeicoes', models.IntegerField(default=1, help_text='Número de trocas de refeições permitidas')),
                ('periodo_trocas_dias', models.IntegerField(default=7, help_text='Período em dias para realizar trocas após receber treino/dieta')),
                ('trocas_ilimitadas', models.BooleanField(default=False, help_text='Se True, permite trocas ilimitadas de exercícios e refeições')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('tipo', models.CharField(choices=[('admin', 'Administrador'), ('nutricionista', 'Nutricionista'), ('personal', 'Personal Trainer'), ('cliente', 'Cliente')], default='cliente', max_length=20)),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Nutricionista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('nome', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('especialidade', models.CharField(blank=True, max_length=100, null=True)),
                ('crn', models.CharField(blank=True, help_text='Conselho Regional de Nutricionistas', max_length=20, null=True)),
                ('perfil', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nutricionista', to='accounts.perfil')),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Personal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('nome', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('especialidade', models.CharField(blank=True, max_length=100, null=True)),
                ('perfil', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='personal', to='accounts.perfil')),
            ],
            options={
                'verbose_name_plural': 'Personais',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('nome', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('altura', models.FloatField(blank=True, null=True)),
                ('peso', models.FloatField(blank=True, null=True)),
                ('data_inicio_plano', models.DateField(blank=True, null=True)),
                ('data_fim_plano', models.DateField(blank=True, null=True)),
                ('data_ultimo_treino', models.DateField(blank=True, help_text='Data em que o último treino foi atribuído', null=True)),
                ('data_ultima_dieta', models.DateField(blank=True, help_text='Data em que a última dieta foi atribuída', null=True)),
                ('trocas_exercicios_restantes', models.IntegerField(default=0, help_text='Número de trocas de exercícios restantes no período atual')),
                ('trocas_refeicoes_restantes', models.IntegerField(default=0, help_text='Número de trocas de refeições restantes no período atual')),
                ('perfil', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cliente', to='accounts.perfil')),
                ('tipo_plano', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clientes', to='accounts.tipoplano')),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
    ]
